#include <Adafruit_NeoPixel.h>


#define PIN1 5
#define PIN2 3
#define NUM_LEDS 20
//#define NUM_LEDS 11 


Adafruit_NeoPixel strip = Adafruit_NeoPixel(20, PIN1, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel strip2 = Adafruit_NeoPixel(12, PIN2, NEO_GRB + NEO_KHZ800);

void setup() {

    strip.begin();
    strip.setBrightness(200);  // If your PSU sucks, use this to limit the current
    strip.show();
    setAll(255,0,0);
    
    strip2.begin();
    strip2.setBrightness(255);  // If your PSU sucks, use this to limit the current
    strip2.show();
}


void loop() {
  setAll(255,0,0);  
  Fire(55,200,30);
  setAll(255,0,0);

}



void showStrip() {
 #ifdef ADAFRUIT_NEOPIXEL_H
   // NeoPixel
   strip.show();
 #endif
 #ifndef ADAFRUIT_NEOPIXEL_H
   // FastLED
   FastLED.show();
 #endif
}


void showStrip2() {
 #ifdef ADAFRUIT_NEOPIXEL_H
   // NeoPixel
   strip2.show();
 #endif
 #ifndef ADAFRUIT_NEOPIXEL_H
   // FastLED
   FastLED.show();
 #endif
}

void setAll(byte red, byte green, byte blue) {
  for(int i = 0; i < NUM_LEDS; i++ ) {
    setPixel(i, red, green, blue);
  }
  showStrip();
}


void setAll2(byte red, byte green, byte blue) {
  for(int i = 0; i < NUM_LEDS-9; i++ ) {
    setPixel2(i, red, green, blue);
  }
  showStrip2();
}

void setPixel(int Pixel, byte red, byte green, byte blue) {
 #ifdef ADAFRUIT_NEOPIXEL_H
   // NeoPixel
   strip.setPixelColor(Pixel, strip.Color(red, 0, blue));
 #endif
 #ifndef ADAFRUIT_NEOPIXEL_H
   // FastLED
   leds[Pixel].r = red;
   leds[Pixel].g = green;
   leds[Pixel].b = blue;
 #endif
}

void setPixel2(int Pixel, byte red, byte green, byte blue) {
 #ifdef ADAFRUIT_NEOPIXEL_H
   // NeoPixel
   strip2.setPixelColor(Pixel, strip2.Color(red, green, blue));
 #endif
 #ifndef ADAFRUIT_NEOPIXEL_H
   // FastLED
   leds[Pixel].r = red;
   leds[Pixel].g = green;
   leds[Pixel].b = blue;
 #endif
}

 void Fire(int Cooling, int Sparking, int SpeedDelay) {
  static byte heat[NUM_LEDS-9];
  int cooldown;
 
  // Step 1.  Cool down every cell a little
  for( int i = 0; i < NUM_LEDS-9; i++) {
    cooldown = random(0, ((Cooling * 10) / NUM_LEDS-9) + 2);
   
    if(cooldown>heat[i]) {
      heat[i]=0;
    } else {
      heat[i]=heat[i]-cooldown;
    }
  }
 
  // Step 2.  Heat from each cell drifts 'up' and diffuses a little
  for( int k= (NUM_LEDS-9) - 1; k >= 2; k--) {
    heat[k] = (heat[k - 1] + heat[k - 2] + heat[k - 2]) / 3;
  }
   
  // Step 3.  Randomly ignite new 'sparks' near the bottom
  if( random(255) < Sparking ) {
    int y = random(7);
    heat[y] = heat[y] + random(160,255);
    //heat[y] = random(160,255);
  }

  // Step 4.  Convert heat to LED colors
  for( int j = 0; j < NUM_LEDS-9; j++) {
    setPixelHeatColor(j, heat[j] );
  }

  showStrip2();
  delay(SpeedDelay);
}

void setPixelHeatColor (int Pixel, byte temperature) {
  // Scale 'heat' down from 0-255 to 0-191
  byte t192 = round((temperature/255.0)*191);
 
  // calculate ramp up from
  byte heatramp = t192 & 0x3F; // 0..63
  heatramp <<= 2; // scale up to 0..252
 
  // figure out which third of the spectrum we're in:
  if( t192 > 0x80) {                     // hottest
    setPixel2(Pixel, 255, 255, heatramp);
  } else if( t192 > 0x40 ) {             // middle
    setPixel2(Pixel, 255, heatramp, 0);
  } else {                               // coolest
    setPixel2(Pixel, heatramp, 0, 0);
  } 
}
